---

- name: check and configure MoodleBox upgrade
  hosts: localhost
  connection: local
  become: 'true'

  pre_tasks:

  - name: get currently installed version info of MoodleBox
    slurp:
      src: "/etc/moodlebox-info"
    register: moodleboxinfo

  - name: set vars with currently installed version number and date of MoodleBox
    set_fact:
      installed_version_number: "{{ (moodleboxinfo['content'] | b64decode).split('\n')[0] | regex_replace('^.*version (\\d+\\.\\d+\\.\\d+)(-[^,]+)*,.*$', '\\1') }}"
      installed_version_date: "{{ (moodleboxinfo['content'] | b64decode).split('\n')[0] | regex_replace('^.*, (\\d{4}-\\d{2}-\\d{2}).*$', '\\1') }}"

  - name: get latest release version info of MoodleBox
    uri:
      url: https://api.github.com/repos/moodlebox/moodlebox/releases/latest
    register: moodlebox_latest_release

  - name: set vars with latest version number and date of MoodleBox
    set_fact:
      latest_version_number: "{{ moodlebox_latest_release.json.name | regex_replace('^v') }}"
      latest_version_date: '{{ moodlebox_latest_release.json.published_at }}'

  - name: is upgrade supported
    set_fact:
      upgrade_supported: "{{ installed_version_number is version('2.0.0', '>=') }} and {{ installed_version_number is version('2.6.0', '!=') }} and {{ installed_version_number is version(latest_version_number, '<') }}"

  - name: inform when upgrade can proceed
    debug:
      msg: "Your MoodleBox version {{ installed_version_number }} will be now upgraded automatically."
    when:
      upgrade_supported

  - name: alert when upgrade cannot proceed
    debug:
      msg: "Your MoodleBox version {{ installed_version_number }} cannot be upgraded automatically."
    when:
      not upgrade_supported|bool

  - name: aborts upgrade since version does not meet criteria
    meta:
      end_play
    when:
      not upgrade_supported|bool

  roles:
#     - download
